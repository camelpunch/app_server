# -*- rnc -*-
# RELAX NG Compact Syntax Grammar for the Atom Protocol

namespace app = "http://purl.org/atom/app#"
namespace local = ""

start = appService

# common:attrs

appCommonAttributes =
   attribute xml:base { atomUri }?,
   attribute xml:lang { atomLanguageTag }?,
   undefinedAttribute*

undefinedAttribute =
  attribute * - (xml:base | xml:lang | local:*) { text }

atomUri = text

atomLanguageTag = xsd:string {
   pattern = "[A-Za-z]{1,8}(-[A-Za-z0-9]{1,8})*"
}

# app:service

appService =
   element app:service {
      appCommonAttributes,
      ( appWorkspace+
        & extensionElement* )
   }

# app:workspace

appWorkspace =
   element app:workspace {
      appCommonAttributes,
      attribute title { text },
      ( appCollection+
        & extensionElement* )
   }

# app:collection

appCollection =
   element app:collection {
      appCommonAttributes,
      attribute title { text },
      attribute href { atomUri  },
      ( appAccept?
        & extensionElement* )
   }


# app:member

appAccept =
   element app:accept {
         appCommonAttributes,
         ( appTypeValue? )
   }

appTypeValue = ( "entry" | media-type |entry-or-media-type  )
media-type = xsd:string { pattern = "entry,(.+/.+,?)*" }
entry-or-media-type = xsd:string { pattern = "(.+/.+,?)*" }
# above is an approximation, rnc doesn't support interleaved text

# Simple Extension

simpleExtensionElement =
   element * - app:* {
      text
   }

# Structured Extension

structuredExtensionElement =
   element * - app:* {
      (attribute * { text }+,
         (text|anyElement)*)
    | (attribute * { text }*,
       (text?, anyElement+, (text|anyElement)*))
   }

# Other Extensibility

extensionElement =
   simpleExtensionElement | structuredExtensionElement



# Extensions

anyElement =
   element * {
      (attribute * { text }
       | text
       | anyElement)*
   }

# EOF
